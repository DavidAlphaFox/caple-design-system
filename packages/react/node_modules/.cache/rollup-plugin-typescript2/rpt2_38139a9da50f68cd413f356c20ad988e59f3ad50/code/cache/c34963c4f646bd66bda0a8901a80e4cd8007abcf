{"code":"import { __assign } from \"tslib\";\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport ConfigContext from '../_config/ConfigContext';\r\nimport { convertReactNodeTo } from '../../utils';\r\nimport './Switch.style.scss';\r\nexport default (function (_a) {\r\n    var children = _a.children, _b = _a.multiple, multiple = _b === void 0 ? false : _b, onChange = _a.onChange, _c = _a.className, className = _c === void 0 ? '' : _c, style = _a.style;\r\n    var useContext = React.useContext, useState = React.useState, useEffect = React.useEffect;\r\n    var prefix = useContext(ConfigContext).prefix;\r\n    var classPrefix = prefix + \"-switch-group\";\r\n    var classNames = classnames(classPrefix, className);\r\n    var convertReactNodeToSwitchs = function (reactNode) { return (convertReactNodeTo('Switch.Group', 'Switch', reactNode)\r\n        .map(function (element, index, elements) {\r\n        return React.cloneElement(element, {\r\n            style: __assign(__assign({}, element.props.style), { borderTopRightRadius: index !== elements.length - 1 ? 0 : undefined, borderBottomRightRadius: index !== elements.length - 1 ? 0 : undefined, borderTopLeftRadius: index !== 0 ? 0 : undefined, borderBottomLeftRadius: index !== 0 ? 0 : undefined, marginLeft: index !== 0 ? -1 : undefined })\r\n        });\r\n    })); };\r\n    var switchs = convertReactNodeToSwitchs(children);\r\n    var _d = useState(switchs.map(function (_, index) {\r\n        var checkedIndex = multiple ? -1 : switchs.findIndex(function (element) { return element.props.checked === true; });\r\n        if (!multiple && checkedIndex === -1 && index === 0) {\r\n            return true;\r\n        }\r\n        else {\r\n            return checkedIndex !== -1 && checkedIndex === index ? true : false;\r\n        }\r\n    })), checkes = _d[0], setCheckes = _d[1];\r\n    switchs = switchs\r\n        .map(function (element, index) {\r\n        return React.cloneElement(element, {\r\n            checked: checkes[index]\r\n        });\r\n    });\r\n    var onClick = function (index) {\r\n        var _a;\r\n        var changedCheckes = checkes.map(function (check, checkIndex) {\r\n            if (!multiple) {\r\n                return index === checkIndex ? true : false;\r\n            }\r\n            else {\r\n                return index === checkIndex ? !check : check;\r\n            }\r\n        });\r\n        setCheckes(changedCheckes);\r\n        var values = switchs.filter(function (_, switchIndex) { return changedCheckes[switchIndex]; }).map(function (element) { return element.props.value; });\r\n        (_a = onChange) === null || _a === void 0 ? void 0 : _a(values);\r\n    };\r\n    useEffect(function () {\r\n        switchs = convertReactNodeToSwitchs(children);\r\n        switchs = switchs\r\n            .map(function (element, index) {\r\n            return React.cloneElement(element, {\r\n                checked: checkes[index]\r\n            });\r\n        });\r\n    }, [children]);\r\n    return (<div className={classNames} style={style}>\n      {switchs\r\n        .map(function (element, index) {\r\n        var props = element.props;\r\n        var switchClassPrefix = prefix + \"-switch\";\r\n        return (<label className={switchClassPrefix + \"--container\"} key={index}>\n                <input type=\"radio\" defaultChecked={checkes[index]} value={props.value} name={props.name}/>\n                <button className={classnames(switchClassPrefix, props.className)} style={props.style} disabled={!!props.disabled} onClick={function () { return onClick(index); }}>\n                  {props.title}\n                </button>\n              </label>);\r\n    })}\n    </div>);\r\n});\r\n","references":["/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/node_modules/@types/react/index.d.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/node_modules/@types/classnames/index.d.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/components/_config/ConfigContext.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/components/Switch/Switch.tsx","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/utils/index.ts"]}
