{"code":"import React from 'react';\r\nimport classnames from 'classnames';\r\nimport TabItem from './TabItem';\r\nimport ConfigContext from '../_config/ConfigContext';\r\nimport { convertReactNodeTo } from '../../utils';\r\nimport './Tab.style.scss';\r\nvar Tab = function (_a) {\r\n    var children = _a.children, active = _a.active, onChange = _a.onChange, _b = _a.className, className = _b === void 0 ? '' : _b, style = _a.style;\r\n    var useContext = React.useContext, useEffect = React.useEffect, useState = React.useState;\r\n    var prefix = useContext(ConfigContext).prefix;\r\n    var classPrefix = prefix + \"-tab\";\r\n    var classNames = classnames(classPrefix, className);\r\n    var getActiveTab = function () {\r\n        var tabs = convertReactNodeTo('Tab', 'Tab.item', children);\r\n        var activeTab = tabs.find(function (element) { return element.props.title === active; });\r\n        var select = tabs[0].props.title;\r\n        var content = tabs[0].props.children;\r\n        if (active && activeTab) {\r\n            if (activeTab) {\r\n                select = active;\r\n                content = activeTab.props.children;\r\n            }\r\n        }\r\n        return [select, content];\r\n    };\r\n    var _c = getActiveTab(), defaultSelect = _c[0], defaultContent = _c[1];\r\n    var _d = useState(defaultSelect), currentSelect = _d[0], setCurrentSelect = _d[1];\r\n    var _e = useState(defaultContent), currentContent = _e[0], setCurrentContent = _e[1];\r\n    useEffect(function () {\r\n        var _a = getActiveTab(), select = _a[0], content = _a[1];\r\n        setCurrentSelect(select);\r\n        setCurrentContent(content);\r\n    }, [active, children]);\r\n    var onClick = function (title, content, index) {\r\n        var _a;\r\n        if (currentSelect === title) {\r\n            return;\r\n        }\r\n        setCurrentSelect(title);\r\n        setCurrentContent(content);\r\n        (_a = onChange) === null || _a === void 0 ? void 0 : _a(title, index);\r\n    };\r\n    return (<div className={classNames} style={style}>\n      <div className={classPrefix + \"--panes\"}>\n        {React.Children.toArray(children).map(function (element, index) {\r\n        var _a;\r\n        var props = element.props;\r\n        var tabItemClassNames = classnames(prefix + \"-tab-item\", props.className, (_a = {},\r\n            _a[classPrefix + \"--active\"] = currentSelect === props.title,\r\n            _a));\r\n        return (<div className={tabItemClassNames} style={props.style} onClick={function () { return onClick(props.title, props.children, index); }} key={props.title}>\n                {props.title}\n              </div>);\r\n    })}\n      </div>\n      <div className={classPrefix + \"--content\"}>\n        {currentContent}\n      </div>\n    </div>);\r\n};\r\nTab.Item = TabItem;\r\nexport default Tab;\r\n","references":["/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/node_modules/@types/react/index.d.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/node_modules/@types/classnames/index.d.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/components/Tab/TabItem.tsx","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/components/_config/ConfigContext.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/utils/index.ts"]}
