{"code":"import React from 'react';\r\nexport { default as GUID } from './GUID';\r\nexport var tuple = function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return args;\r\n};\r\nexport var warning = function (title, body) { return console.warn(\"%c \" + title + \"\\n\\n\", 'font-weight: bold; font-size: 16px;', body); };\r\nexport var camelToSnake = function (camel) { return camel.replace(/[\\w]([A-Z])/g, function (s) { return s[0] + \"-\" + s[1]; }).toLowerCase(); };\r\nexport var convertReactNodeTo = function (parentName, childName, reactNode) {\r\n    return React.Children.toArray(reactNode).filter(function (element) {\r\n        if (React.isValidElement(element) === false) {\r\n            console.warn(\"%c \" + parentName + \"\\n\\n\", 'font-weight: bold; font-size: 16px;', \"Only accepts \" + childName + \" as it's children\");\r\n            return false;\r\n        }\r\n        return true;\r\n    });\r\n};\r\nexport var concatReactNodeToString = function (reactNode) {\r\n    return React.Children.toArray(reactNode)\r\n        .filter(function (element) {\r\n        return typeof element === 'string';\r\n    })\r\n        .concat()\r\n        .toString();\r\n};\r\n","references":["/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/node_modules/@types/react/index.d.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/utils/GUID.ts"]}
