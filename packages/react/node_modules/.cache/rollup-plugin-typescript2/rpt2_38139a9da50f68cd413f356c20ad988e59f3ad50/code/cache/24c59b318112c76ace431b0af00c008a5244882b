{"code":"import { __assign } from \"tslib\";\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport ConfigContext from '../_config/ConfigContext';\r\nimport './Avatar.style.scss';\r\nexport default (function (_a) {\r\n    var _b = _a.size, size = _b === void 0 ? 80 : _b, _c = _a.shape, shape = _c === void 0 ? 'circle' : _c, src = _a.src, text = _a.text, alt = _a.alt, _d = _a.className, className = _d === void 0 ? '' : _d, style = _a.style;\r\n    var useContext = React.useContext, useState = React.useState, useRef = React.useRef, useEffect = React.useEffect;\r\n    var prefix = useContext(ConfigContext).prefix;\r\n    var classPrefix = prefix + \"-avatar\";\r\n    var classNames = classnames(\"\" + classPrefix, classPrefix + \"--shape-\" + shape, className);\r\n    var children = null;\r\n    var span = useRef(null);\r\n    var _e = useState(0.0), scale = _e[0], setScale = _e[1];\r\n    useEffect(function () {\r\n        if (span.current) {\r\n            var textWidth = span.current.offsetWidth;\r\n            setScale(size - 8 < textWidth ? (size - 8) / textWidth : 1);\r\n        }\r\n    });\r\n    if (src) {\r\n        children = <img className={classPrefix + \"--image\"} src={src} alt={alt}/>;\r\n    }\r\n    else if (text) {\r\n        var transformString = \"scale(\" + scale + \") translateX(-50%)\";\r\n        var transformStyle = {\r\n            msTransform: transformString,\r\n            WebkitTransform: transformString,\r\n            transform: transformString\r\n        };\r\n        var textStyle = {\r\n            lineHeight: size + \"px\"\r\n        };\r\n        children = (<span className={classPrefix + \"--text\"} style={__assign(__assign({}, transformStyle), textStyle)} ref={span}>\n        {text}\n      </span>);\r\n    }\r\n    else {\r\n        children = null;\r\n    }\r\n    var sizeStyle = {\r\n        width: size,\r\n        height: size\r\n    };\r\n    return (<span className={classNames} style={__assign(__assign({}, sizeStyle), style)}>\n      {children}\n    </span>);\r\n});\r\n","references":["/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/node_modules/@types/react/index.d.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/node_modules/@types/classnames/index.d.ts","/Users/kciter/Documents/cobalt/caple/caple-ui/packages/react/src/components/_config/ConfigContext.ts"]}
